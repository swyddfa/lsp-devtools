name: Release

on:
  push:
    branches:
    - release

jobs:
  # Simple job the checks to see which parts we actually have to build.
  trigger:
    name: Trigger
    runs-on: ubuntu-latest
    outputs:
      lsp-devtools: ${{steps.check-lsp-devtools.outputs.build}}
      pytest-lsp: ${{steps.check-pytest-lsp.outputs.build}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - run: |
        if [ -z "${BASE_REF}" ]; then
          echo "BASE=HEAD^" >> $GITHUB_ENV
        else
          echo "BASE=origin/${BASE_REF}" >> $GITHUB_ENV
        fi
      name: Determine base
      env:
        BASE_REF: ${{ github.base_ref }}

    - id: check-lsp-devtools
      run: |
        set -e
        echo ${BASE}

        ./scripts/should-build.sh lsp-devtools
      name: "Build lsp-devtools?"

    - id: check-pytest-lsp
      run: |
        set -e
        echo ${BASE}

        ./scripts/should-build.sh pytest-lsp
      name: "Build pytest-lsp?"

  lsp-devtools:
    name: lsp-devtools
    needs: trigger
    if: always() && needs.trigger.outputs.lsp-devtools
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - run: |
        sudo apt update
        sudo apt install pandoc

        python --version
        python -m pip install --upgrade pip
        python -m pip install build bump2version towncrier docutils
      name: Install Build Tools

    - run: |
        set -e

        ./scripts/make-release.sh lsp-devtools
      name: Set Version
      id: info

    - name: Package
      run: |
        cd lib/lsp-devtools
        python -m build

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: 'dist'
        path: lib/lsp-devtools/dist

    - name: Publish
      id: assets
      run: |
        cd lib/lsp-devtools
        python -m pip install twine
        python -m twine upload dist/* -u alcarney -p ${{ secrets.PYPI_PASS }}

    - name: Create Release
      run: |
        gh release create "${RELEASE_TAG}" \
          --title "lsp-devtools v${VERSION} - ${RELEASE_DATE}" \
          -F lib/lsp-devtools/.changes.html \
          ./lib/lsp-devtools/dist/*
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pytest-lsp:
    name: pytest-lsp
    needs: trigger
    if: always() && needs.trigger.outputs.pytest-lsp
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - run: |
        sudo apt update
        sudo apt install pandoc

        python --version
        python -m pip install --upgrade pip
        python -m pip install build bump2version towncrier docutils

      name: Install Build Tools

    - run: |
        set -e

        ./scripts/make-release.sh pytest-lsp
      name: Set Version
      id: info

    - name: Package
      run: |
        cd lib/pytest-lsp
        python -m build

    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: 'dist'
        path: lib/pytest-lsp/dist

    - name: Publish
      run: |
        cd lib/pytest-lsp
        python -m pip install twine
        python -m twine upload dist/* -u alcarney -p ${{ secrets.PYPI_PASS }}

    - name: Create Release
      run: |
        gh release create "${RELEASE_TAG}" \
          --title "pytest-lsp v${VERSION} - ${RELEASE_DATE}" \
          -F lib/pytest-lsp/.changes.html \
          ./lib/pytest-lsp/dist/*
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
